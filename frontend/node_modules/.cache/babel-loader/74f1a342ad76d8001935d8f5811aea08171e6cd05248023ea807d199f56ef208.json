{"ast":null,"code":"var _jsxFileName = \"D:\\\\learning-path-generator\\\\frontend\\\\src\\\\pages\\\\SelectRole.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jwtDecode } from 'jwt-decode';\nimport axios from 'axios';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SelectRole = () => {\n  _s();\n  const [goalId, setGoalId] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const roles = [{\n    id: 1,\n    name: 'Full-Stack Developer'\n  }, {\n    id: 2,\n    name: 'Frontend Developer'\n  }, {\n    id: 3,\n    name: 'Backend Developer'\n  }, {\n    id: 4,\n    name: 'Machine Learning Engineer'\n  }, {\n    id: 5,\n    name: 'Java Developer'\n  }, {\n    id: 6,\n    name: 'Business Analyst'\n  }, {\n    id: 7,\n    name: 'Data Scientist'\n  }];\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!goalId) return setError('Please select a role');\n    try {\n      const token = localStorage.getItem('token');\n      const decoded = jwtDecode(token);\n      const userId = decoded.id;\n\n      // Generate path for this user with selected goalId\n      await axios.post('http://localhost:5000/api/path/generate', {\n        userId,\n        goalId\n      });\n      navigate('/dashboard');\n    } catch (err) {\n      console.error(err);\n      setError('Could not generate path. Try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Select Your Career Role\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: goalId,\n        onChange: e => setGoalId(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"-- Choose Role --\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), roles.map(role => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: role.id,\n          children: role.name\n        }, role.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Start Learning Path\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red',\n          marginTop: '10px'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(SelectRole, \"xolVZz9QJlE+79d3f5KtbE3dYNs=\", false, function () {\n  return [useNavigate];\n});\n_c = SelectRole;\nexport default SelectRole;\nvar _c;\n$RefreshReg$(_c, \"SelectRole\");","map":{"version":3,"names":["React","useState","useNavigate","jwtDecode","axios","jsxDEV","_jsxDEV","SelectRole","_s","goalId","setGoalId","error","setError","navigate","roles","id","name","handleSubmit","e","preventDefault","token","localStorage","getItem","decoded","userId","post","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","map","role","type","style","color","marginTop","_c","$RefreshReg$"],"sources":["D:/learning-path-generator/frontend/src/pages/SelectRole.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {jwtDecode} from 'jwt-decode';\r\nimport axios from 'axios';\r\nimport '../App.css';\r\n\r\nconst SelectRole = () => {\r\n  const [goalId, setGoalId] = useState('');\r\n  const [error, setError] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const roles = [\r\n    { id: 1, name: 'Full-Stack Developer' },\r\n    { id: 2, name: 'Frontend Developer' },\r\n    { id: 3, name: 'Backend Developer' },\r\n    { id: 4, name: 'Machine Learning Engineer' },\r\n    { id: 5, name: 'Java Developer' },\r\n    { id: 6, name: 'Business Analyst' },\r\n    { id: 7, name: 'Data Scientist' },\r\n  ];\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!goalId) return setError('Please select a role');\r\n\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const decoded = jwtDecode(token);\r\n      const userId = decoded.id;\r\n\r\n      // Generate path for this user with selected goalId\r\n      await axios.post('http://localhost:5000/api/path/generate', {\r\n        userId,\r\n        goalId,\r\n      });\r\n\r\n      navigate('/dashboard');\r\n    } catch (err) {\r\n      console.error(err);\r\n      setError('Could not generate path. Try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <h2>Select Your Career Role</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <select value={goalId} onChange={(e) => setGoalId(e.target.value)}>\r\n          <option value=\"\">-- Choose Role --</option>\r\n          {roles.map((role) => (\r\n            <option key={role.id} value={role.id}>\r\n              {role.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <button type=\"submit\">Start Learning Path</button>\r\n        {error && <p style={{ color: 'red', marginTop: '10px' }}>{error}</p>}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectRole;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}